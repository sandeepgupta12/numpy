name: Native ppc64le Linux Test

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  native_ppc64le:
    # This job runs only in the main NumPy repository.
    # It requires a native ppc64le GHA runner, which is not available on forks.
    # For more details, see: https://github.com/numpy/numpy/issues/29125
    
    runs-on: ubuntu-24.04-ppc64le-p10
    name: "Native PPC64LE"
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: recursive
        fetch-tags: true
        persist-credentials: false

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3 python3-pip python3-dev ninja-build gfortran \
                            build-essential libopenblas-dev liblapack-dev pkg-config
        pip install --upgrade pip
        pip install -r requirements/build_requirements.txt
        pip install pytest pytest-xdist hypothesis typing_extensions pytest-timeout spin
        echo "/home/runner/.local/bin" >> $GITHUB_PATH

    
    

    # - name: Meson Build
    #   run: |
    #     spin build
    # Build NumPy from source (your patched version)
    # - name: Build NumPy from source
    #   run: |
    #     pip uninstall -y numpy || true
    #     git clone https://github.com/numpy/numpy.git
    #     cd numpy
    #     # Apply your C changes here if not already committed
    #     # e.g., patch files or copy edited npy_divmod / npy_remainder
    #     pip install .  # install the patched NumPy
    # Optional: Verify NumPy version and debug imports
    # - name: Check NumPy version
    #   run: python3 -c "import numpy as np; print(np.__version__); print(np.show_config())"

    # - name: Meson Log
    #   if: always()
    #   run: cat build/meson-logs/meson-log.txt

    # - name: Run Tests
    #   run: |
    #     spin test -- --timeout=60 --durations=10

    # Run tests with debug logs
    # - name: Run Tests with Debug Output
    #   run: |
    #     export PYTHONUNBUFFERED=1
    #     export PYTHONFAULTHANDLER=x
    #     mkdir -p test_logs
    #     # Redirect stderr to capture npy_divmod / npy_remainder logs
    #     spin test -- --timeout=60 --durations=10 2> test_logs/npy_debug.log || true

    # Upload debug logs for inspection
    # - name: Upload Debug Log
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: npy_debug
    #     path: test_logs/npy_debug.log

    - name: Meson Build
      run: |
        spin build -- -Dallow-noblas=false

    - name: Meson Log
      if: always()
      run: cat build/meson-logs/meson-log.txt

    - name: Run Tests
      run: |
        spin test -- --timeout=60 --durations=10